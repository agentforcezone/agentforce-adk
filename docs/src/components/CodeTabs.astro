---
interface Tab {
  label: string;
  code: string;
  language?: string;
}

interface Props {
  tabs: Tab[];
  title?: string;
}

const { tabs, title } = Astro.props;
---

<div class="code-tabs">
  {title && <h4 class="code-tabs-title">{title}</h4>}
  <div class="tabs-header">
    {tabs.map((tab, index) => (
      <button class={`tab-button ${index === 0 ? 'active' : ''}`} data-tab-index={index}>
        {tab.label}
      </button>
    ))}
  </div>
  <div class="tabs-content">
    {tabs.map((tab, index) => (
      <div class={`tab-content ${index === 0 ? 'active' : ''}`} data-tab-index={index}>
        <pre><code class={`language-${tab.language || 'typescript'}`}>{tab.code}</code></pre>
      </div>
    ))}
  </div>
</div>

<script>
  // Simple tabs functionality
  document.addEventListener('DOMContentLoaded', () => {
    const tabContainers = document.querySelectorAll('.code-tabs');
    
    tabContainers.forEach(container => {
      const tabButtons = container.querySelectorAll('.tab-button');
      const tabContents = container.querySelectorAll('.tab-content');
      
      tabButtons.forEach(button => {
        button.addEventListener('click', () => {
          const tabIndex = button.getAttribute('data-tab-index');
          
          // Remove active class from all buttons and contents
          tabButtons.forEach(btn => btn.classList.remove('active'));
          tabContents.forEach(content => content.classList.remove('active'));
          
          // Add active class to current button and content
          button.classList.add('active');
          container.querySelector(`.tab-content[data-tab-index="${tabIndex}"]`)?.classList.add('active');
        });
      });
    });
  });
</script>

<style>
  .code-tabs {
    margin: 2rem 0;
    border-radius: 0.5rem;
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .code-tabs-title {
    padding: 0.75rem 1rem;
    margin: 0;
    font-size: 1rem;
    font-weight: 600;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    background-color: rgba(255, 255, 255, 0.05);
  }

  .tabs-header {
    display: flex;
    background-color: var(--sl-color-gray-6);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    overflow-x: auto;
  }

  .tab-button {
    padding: 0.75rem 1.25rem;
    background: transparent;
    border: none;
    color: var(--sl-color-gray-2);
    cursor: pointer;
    font-size: 0.875rem;
    font-weight: 500;
    transition: all 0.2s ease;
    white-space: nowrap;
  }

  .tab-button:hover {
    color: var(--sl-color-white);
    background-color: rgba(255, 255, 255, 0.05);
  }

  .tab-button.active {
    color: var(--sl-color-primary);
    background-color: rgba(56, 234, 53, 0.1);
    border-bottom: 2px solid var(--sl-color-primary);
  }

  .tab-content {
    display: none;
    background-color: var(--sl-color-gray-6);
  }

  .tab-content.active {
    display: block;
  }

  .tab-content pre {
    margin: 0;
    padding: 1rem;
    overflow-x: auto;
  }

  .tab-content code {
    font-family: var(--sl-font-mono);
    font-size: 0.875rem;
    line-height: 1.6;
    tab-size: 2;
  }
</style>
